generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

type MessageDataChannelAndMessageIds {
  channelId String
  messageId String
}

type MessageDataReference {
  channelId String
  guildId   String?
  messageId String?
}

type SetupWebhook {
  id    String
  token String
  url   String
}

type UserDataWarnings {
  automated   Boolean
  moderatorId String?
  id          String
  reason      String
  timestamp   DateTime
}

type HubRating {
  userId String
  rating Int    @default(0)
}

type HubOwner {
  userId   String
  serverId String
}

type HubJoinRequest {
  submitterId String
  serverId    String
  channelId   String
}

model blacklistedServers {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  serverId   String    @unique
  serverName String
  expires    DateTime?
  reason     String
}

model blacklistedUsers {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  userId   String    @unique
  notified Boolean
  reason   String
  expires  DateTime?
  username String
}

model connectedList {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  channelId  String        @unique
  serverId   String
  connected  Boolean
  compact    Boolean
  invite     String?
  profFilter Boolean
  webhook    SetupWebhook?
  date       DateTime      @default(now())
  hub        hubs?         @relation(fields: [hubId], references: [id])
  hubId      String?       @db.ObjectId
}

model hubs {
  id           String           @id @default(auto()) @map("_id") @db.ObjectId
  name         String           @unique
  description  String
  language     String           @default("English")
  tags         String[]
  owner        HubOwner
  rating       HubRating[]
  iconUrl      String
  bannerUrl    String?
  reviewed     Boolean          @default(false)
  private      Boolean
  official     Boolean          @default(false)
  createdAt    DateTime         @default(now())
  connections  connectedList[]
  joinRequests HubJoinRequest[]
}

model messageData {
  id                   String                            @id @default(auto()) @map("_id") @db.ObjectId
  authorId             String
  channelAndMessageIds MessageDataChannelAndMessageIds[]
  reference            MessageDataReference?
  serverId             String
  timestamp            Float
}

model restrictedWords {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  words String[]
}

model userBadges {
  userId String   @id @map("_id")
  badges String[]
}

model userWarns {
  id       String             @id @default(auto()) @map("_id") @db.ObjectId
  userId   String             @unique
  userTag  String
  warnings UserDataWarnings[]
}
