#
name: Create, Run and Publish Docker Image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    tags:
      - v*

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-run-publish-image:
    runs-on: self-hosted
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Backup Container Logs
        run: |
          docker cp $(docker ps -alq):/src/logs .
          mv logs/ ~/console-logs/interchat-logs-$(date +"%Y-%m-%d_%H-%M-%S")

      - name: Stop and delete old containers (if any)
        continue-on-error: true
        run: |
          docker stop $(docker ps -aq)
          docker rm $(docker ps -aq)
      - name: Run image
        run: docker run -p 443:443 -d --env-file ~/important/interchat-env --restart=on-failure ghcr.io/discord-interchat/interchat

      - name: Publish Docker image
        run: docker push ${{ steps.meta.outputs.tags }}

      - name: Cleanup
        run: sudo docker system prune -a
